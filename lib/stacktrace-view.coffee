{View, EditorView} = require 'atom'
{Subscriber} = require 'emissary'

{Stacktrace, PREFIX} = require './stacktrace'

class StacktraceView extends View

  Subscriber.includeInto this

  @content: (trace) ->
    tclass = if trace.isActive() then 'activated' else ''
    @div class: "stacktrace tool-panel padded #{tclass}", =>
      @div class: 'panel padded', =>
        @h2 class: 'error-message', trace.message
        @p class: 'activate-control', =>
          @button class: 'btn btn-primary selected inline-block', click: 'activate', 'Activate'
          @span class: 'inline-block', 'to navigate around this stacktrace.'
        @p class: 'deactivate-control', =>
          @button class: 'btn btn-primary inline-block', click: 'deactivate', 'Deactivate'
          @span class: 'inline-block', 'to close the stacktrace navigation panel.'
      @div class: 'frames', =>
        for frame in trace.frames
          @subview 'frame', new FrameView(frame)

  initialize: (@trace) ->
    @subscribe Stacktrace, 'active-changed', (e) =>
      if e.newTrace is @trace
        @addClass 'activated'
      else
        @removeClass 'activated'

  # Internal: Return the window title.
  #
  getTitle: ->
    @trace.message

  # Public: Activate the current {Stacktrace}.
  #
  activate: -> @trace.activate()

  # Public: Deactivate the current {Stacktrace}.
  #
  deactivate: -> @trace.deactivate()

  # Internal: Register an opener function in the workspace to handle URLs
  # generated by a Stacktrace.
  #
  @registerIn: (workspace) ->
    workspace.registerOpener (filePath) ->
      trace = Stacktrace.forUrl(filePath)
      new StacktraceView(trace) if trace?


class FrameView extends View

  @content: (frame) ->
    @div class: 'frame inset-panel', =>
      @div class: 'panel-heading', =>
        @span class: 'icon icon-fold inline-block', click: 'minimize'
        @span class: 'icon icon-unfold inline-block', click: 'restore'
        @span class: 'function-name text-highlight inline-block', frame.functionName
        @span class: 'source-location text-info inline-block pull-right', click: 'navigate', =>
          @text "#{frame.rawPath} @ #{frame.lineNumber}"
      @div class: 'panel-body padded', outlet: 'body', click: 'navigate', =>
        @subview 'source', new EditorView(mini: true)

  initialize: (@frame) ->
    @frame.getContext 3, (err, lines) =>
      if err?
        console.error err
      else
        @source.getEditor().setText lines.join("\n")

  navigate: -> @frame.navigateTo()

  minimize: ->
    @addClass 'minimized'
    @body.hide 'fast'

  restore: ->
    @removeClass 'minimized'
    @body.show 'fast'

module.exports =
  StacktraceView: StacktraceView
  FrameView: FrameView
